//=================================================================================================
//=================================================================================================

//		Revenant

//=================================================================================================
//=================================================================================================
Class RevenantRune : DemonRuneBase
{
	Default 
	{
		DemonRuneBase.Morph "RevenantMorpher";
		Inventory.PickupMessage "Revenant rune";
	}
	States
	{
	Pickup:
		TNT1 A 0 
		{
			if (CountInv("IamADemonToken") || CountInv("PowerInvulBase") || countinv("D4DoomDollHands") || countinv("BusyToken"))
			{
				return false;
			}
			else
			{
				A_GiveInventory("SoundStopper",1); //stops any sound (mostly for the looping ones)
				A_GiveInventory("HealthArmorSaver",1);
				A_GiveInventory("IamADemonToken",1);
				A_GiveInventory("IamRevenant",1);
				A_GiveInventory(invoker.Morph,1);
				return true;
			}
			
		}
		Stop;
	}
}

Class RevenantMorpher: PowerupGiver
{
	
	Default 
	{
		Inventory.MaxAmount 1;
		Inventory.Amount 1;
		Powerup.Type "PowerRevenantMorph";
		Powerup.Duration -60;
		+Inventory.AutoActivate
	}
	States
	{
	Spawn:
		PLAY A 3;
		Loop;
	}
}

Class PowerRevenantMorph : PowerRuneBase
{
	Default 
	{
		PowerMorph.PlayerClass "PlayerRevenant";
		PowerMorph.MorphStyle (MRF_FULLHEALTH|MRF_UNDOBYDEATH|MRF_UNDOBYDEATHSAVES|MRF_UNDOBYTOMEOFPOWER|MRF_LOSEACTUALWEAPON|MRF_NEWTIDBEHAVIOUR|MRF_UNDOALWAYS|MRF_FAILNOTELEFRAG);
		PowerMorph.UnMorphFlash "DemonRuneMorphOff";
		PowerMorph.MorphFlash "DemonRuneMorphOn";
	}
}


Class PlayerRevenant : DemonPlayerBase
{
	double user_speed;
	
	Default 
	{
		Speed 1;
		Health 400;
		Radius 16;
		Height 56;
		Mass 400;
		PainChance 40;
		Gravity 0.5;
		Player.JumpZ 10;
		Player.MorphWeapon "D4DRevenantWeapon";
		Player.ViewHeight 53;
		Player.AttackZOffset 15;
		Player.CrouchSprite "SKEL";
		Player.SoundClass "PlayerDemonCommon";
		PainSound "Doom4/Monsters/Revenant/Pain";
		DeathSound "Doom4/Monsters/Revenant/Death";
		DamageFactor "Normal", 0.5;
		+NOSKIN
		-PICKUP
	}
	States
	{
	Spawn:
		SKEL A 0 NODELAY 
		{	
			if (!CountInv("OverlaysStarted"))
			{
				A_ClearOverlays();
				A_GiveInventory("JetpackFuel",100);
				A_TakeInventory("JetpackCooling",32768);
				A_Overlay(6004,"Overlay.Jetpack",true);
				A_Overlay(6005,"Overlay.RocketCooldown",true);	
				A_Overlay(6006,"Overlay.JetpackCooldown",true);	
				A_PlaySound("Doom4/Monsters/Revenant/Sight",6);
				A_GiveInventory("OverlaysStarted",1);
			}
		}
		SKEL A -1;
		Stop;
	See:
		SKEL ABCD 4;
		Loop;
	Pain:
		SKEL H 5 A_Pain();
		Goto Spawn;
	Missile:
	Melee:
		SKEL JK 10;
		Goto Spawn;
	Death:
		SKEL LM 7;
		SKEL N 7 A_Scream();
		SKEL O 7 A_NoBlocking();
		SKEL P 7;
		SKEL Q -1;
		Stop;
		
	Overlay.Steps:
		TNT1 A 5
		{
			user_speed = (vel.x ** 2 + vel.y ** 2);
			if(A_CheckFloor("Null"))
			{
				if(user_speed > 150)
				{
					A_PlaySound("Player/Demon/RevenantStep",CHAN_AUTO,0.85);
					A_SetTics(12);
				}
				else if(user_speed > 20)
				{
					A_PlaySound("Player/Demon/RevenantStep",CHAN_AUTO,0.85);
					A_SetTics(15);
				}
			}
		}
		Loop;
	Overlay.Jetpack:
		M666 A 1
		{
			int gpi = GetPlayerInput(MODINPUT_BUTTONS);
			if ((gpi & BT_ALTATTACK  ) && CountInv("JetpackFuel") && !CountInv("JetpackCooling")/*|| (gpi & BT_JUMP  )&&CountInv("JetpackFuel") && !CountInv("JetpackCooling")*/)
			{ 
				vel.z = 3;
				A_ChangeVelocity(
				x: ((gpi & BT_FORWARD  ) ? .5 : 0) - 
				   ((gpi & BT_BACK     ) ? .5 : 0),
				y: ((gpi & BT_MOVELEFT ) ? .5 : 0) -
				   ((gpi & BT_MOVERIGHT) ? .5 : 0),
				flags: CVF_RELATIVE);
				vel.xy *= .97;
				A_PlaySound("Player/Demon/Revenant/JetPackStartLoop",7,1,1);
				A_GiveInventory("RevenantFlyingToken",1);
				A_TakeInventory("JetpackFuel",1);
			}
			else
			{
				if (CountInv("RevenantFlyingToken"))
				{
					A_TakeInventory("RevenantFlyingToken",32768);
					A_PlaySound("Player/Demon/Revenant/JetPackEndThrust",7);
				}
			}
		}
		Loop;
	Overlay.RocketCooldown:
		M666 A 5 
		{
			A_TakeInventory("RevRcktHeat",1);
		}
		Loop;
	Overlay.JetpackCooldown:
		M666 A 1
		{
			if (CountInv("JetpackFuel")==0 && !CountInv("JetpackCooling"))					//when runs out of fuel
			{	A_GiveInventory("JetpackCooling",210);	}	//will force cool off
		
			if (CountInv("JetpackCooling"))				
			{	A_TakeInventory("JetpackCooling",1);	}
		
			if (CountInv("RevenantFlyingToken")==0 /*&& CountInv("JetpackCooling")==0*/)
			{
				A_GiveInventory("JetpackFuel",1);	
				A_TakeInventory("JetpackCooling",1);
			}
		
		}
		Loop;		
	Overlay.IdleSound:
		TNT1 A 35;
		TNT1 A 0 
		{
			if (!GetCvar("D4D_SilentMorphs") && random(1,5)==5)
			{
				A_PlaySound("Doom4/Monsters/Revenant/Idle",5);
			}
		}
		Loop;
	}
}

Class D4DRevenantWeapon : DoomWeapon
{
	Default 
	{
		Tag "Shoulder-Mounted Rocket Launchers";
	}
	States
	{
	Ready:
		RVCG A 1 A_WeaponReady(WRF_DISABLESWITCH);
		Loop;
	Deselect:
		RVCG A 1 A_Lower;
		Loop;
	Select:
		RVCG A 1 A_Raise;
		Loop;
	Fire:
		RVCG A 0 
		{
			A_PlaySound("Player/Demon/Revenant/Fire",6);
			A_FireProjectile("PlayerRevRocket",0,0,-15,12);
			A_FireProjectile("PlayerRevRocket",0,0,15,12);
		}
		RVCG BC 1 Bright A_SetPitch(pitch-3.5, SPF_INTERPOLATE);
		RVCG DDDEEE 1 Bright;
		RVCG AAAAAAA 1 A_SetPitch(pitch+1, SPF_INTERPOLATE);
		RVCG A 13;
		Goto Ready;
		
	Meh:
		RVCG A 2
		{	vel.z =  5;	}
		RVCG A 0 A_WeaponReady(WRF_NOBOB);
		Goto Ready;

	Spawn:
		SHOT A -1;
		Stop;
	}
}	

Class RevRcktHeat : Inventory			{ Default { Inventory.MaxAmount 7; Inventory.InterHubAmount 0; } }
Class RevRocketPlaying : Inventory		{ Default { Inventory.MaxAmount 1; Inventory.InterHubAmount 0; } }
Class RevenantFlyingToken : Inventory 	{ Default { Inventory.InterHubAmount 0; } }


Class JetpackFuel : Inventory 
{
	Default 
	{
		Inventory.MaxAmount 100;
		Inventory.Amount 1;
		Inventory.InterHubAmount 0;
	}
}
Class JetpackCooling : Inventory 
{
	Default 
	{
		Inventory.MaxAmount 210;
		Inventory.Amount 1;
		Inventory.InterHubAmount 0;
	}
}

Class PlayerRevRocket : Actor 
{
	int user_value1;
	int user_value2;
	double  user_value3;
	double  user_value4;
	
	Default 
	{
		Projectile;
		Speed 22;
		Damage 15;
		Radius 2;
		Height 3;
		Scale 0.7;
		+HITTRACER
		+EXTREMEDEATH
	
		//SeeSound "Doom4/Weapon/Machinegun/MiniMissileFire";
		Decal "D4ExploScorchSmallest";
	}
	States
	{
	Spawn:
		SWMS A 1 Bright Light("OrangeSmallPoint1")
		{
			A_Weave(random(0,2), random(0,2), frandom(0,2), frandom(0,2));
			if (GetCvar("HQEffects"))
			{
				//A_SpawnItemEx("RocketGasTrail",-4,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketTrailSmokeSmaller",-5,random(5,-5),random(5,-5),0,0,0,0,SXF_NOCHECKPOSITION);	
				A_SpawnItemEx("MonsterRocketTrailFire",-5,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
			}
			else
			{
				A_SpawnItemEx("MonsterRocketTrailFire",-5,0,0,0,0,0,0,SXF_NOCHECKPOSITION,128);
			}
		}
		Wait;
	Death:
		TNT1 A 0 
		{
			A_Explode(64,128,0);
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("BD0000",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
			A_SpawnParticle("FF4D00",SPF_FULLBRIGHT,random(20,40),random(2,4),0,0,0,0,frandom(2.5,-2.5),frandom(2.5,-2.5),frandom(1,5),0,0,-0.3);
		}
		TNT1 A 0 
		{
			A_PlaySound("Doom4/Other/OtherRocketExplo");
			if (GetCvar("HQEffects"))
			{
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
				A_SpawnItemEx("D4RocketExplosionSmoke",0,0,0,frandom(0.5,1.5),frandom(0.5,1.5),frandom(0.5,1.5),random(0,359),SXF_NOCHECKPOSITION);
			}
			A_SpawnItemEx("CyberdemonRocketExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
		}
		TNT1 A 2 Light("OrangeMediumPoint2");
		TNT1 A 2 Light("OrangeMediumPoint3");
		TNT1 A 2 Light("OrangeSmallPoint1");
		TNT1 A 2 Light("OrangeSmallPoint2");
		TNT1 A 2 Light("OrangeSmallPoint3");
		Stop;
	}
}

Class D4RocketTrailSmokeSmaller : D4RocketTrailSmoke
{
	Default 
	{
		+CLIENTSIDEONLY
		+NOINTERACTION
		+FORCEXYBILLBOARD
		RenderStyle "Translucent";
		Alpha 0.2;
		Scale 0.0;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		X037 AAAAAAAA 1 
		{
			A_SetScale(Scale.X+0.025);
			A_FadeIn(0.02);
		}
	Continue:
		X037 A 1 A_FadeOut(0.018);
		X037 A 0 A_SetScale(Scale.X+0.01);
		Loop;
	}
}